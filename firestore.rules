rules_version = '2';

function isUpdateRestrictedToField(request, field) {
    return request.resource.data.diff(resource.data).affectedKeys().hasOnly([field]);
}

service cloud.firestore {
  match /databases/{database}/documents {
    match /config/{configFile} {
      allow write: if request.auth.uid != null;
      allow read: if true;
    }
    match /users/{userId} {
      allow write, read: if request.auth.uid != null;
    }
    match /chatsv3/{chatId} {
      allow write, read: if request.auth.uid != null;
    }
    match /privatechats/{userId}/{restOfPath=**} {
      allow create: if request.auth.uid != null && request.resource.data.from == request.auth.uid;
      allow read: if request.auth.uid != null && userId == request.auth.uid;
      allow update: if request.auth.uid != null && isUpdateRestrictedToField(request, 'isRead');
    }
    match /experiences/{experienceId}/{restOfPath=**} {
      allow write, read: if request.auth.uid != null;
    }
    match /faq/{faqId} {
      allow read: if true;
    }
    match /marketingemails/{emailId} {
      allow read: if request.auth.uid != null;
      allow write: if true;
    }
     match /venues/{restOfPath=**} {
      allow write, read: if request.auth.uid != null;
    }
  }
}
